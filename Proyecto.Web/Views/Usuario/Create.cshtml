@model Proyecto.Application.DTOs.UsuarioDTO

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="crear" data-ajax="true" asp-antiforgery="true"
              data-ajax-method="POST"
              data-ajax-begin="onBegin"
              data-ajax-failure="onFailure"
              data-ajax-success="onSuccess"
              data-ajax-complete="onComplete">
            
            @Html.AntiForgeryToken()
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Login" class="control-label"></label>
                <input asp-for="Login" class="form-control" />
                <span asp-validation-for="Login" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdPerfil" class="control-label"></label>
                @Html.DropDownListFor(m => m.IdPerfil,
                         new SelectList(ViewBag.ListaPerfiles, "IdPerfil", "DescripcionPerfil"), new { @class = "form-select" })
                <span asp-validation-for="IdPerfil" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DescripcionPerfil" class="control-label"></label>
                <input asp-for="DescripcionPerfil" class="form-control" />
                <span asp-validation-for="DescripcionPerfil" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nombre" class="control-label"></label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Apellidos" class="control-label"></label>
                <input asp-for="Apellidos" class="form-control" />
                <span asp-validation-for="Apellidos" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Estado" /> @Html.DisplayNameFor(model => model.Estado)
                </label>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                |
                <a asp-action="Index" class="btn btn-success">Regresar</a>
            </div>
        </form>
    </div>
</div>

<br />
<div id="contenedor"></div>
<div id="loader" class="xxxx"></div>
<br />

@section Scripts {
    <script type="text/javascript">

        document.getElementById("crear").addEventListener("submit", function (event) {
    
            event.preventDefault();
            event.stopPropagation();

            var login = document.getElementById("Login").value.trim();
            var idPerfil = document.getElementById("IdPerfil").value.trim();
            var descripcionPerfil = document.getElementById("DescripcionPerfil").value.trim();
            var password = document.getElementById("Password").value.trim();
            var nombre = document.getElementById("Nombre").value.trim();
            var apellidos = document.getElementById("Apellidos").value.trim();

            if (login !== "" && idPerfil !== "" && descripcionPerfil !== "" && password !== "" && nombre !== "" && apellidos !== "") {
     
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: '¿Deseas guardar este usuario en el sistema?',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, guardar cambios',
                    cancelButtonText: 'Cancelar'

                }).then((result) => {

                    if (result.isConfirmed) {
                        onBegin();
                        setTimeout(function () {
                            document.getElementById('crear').submit();
                        }, 1000); 
                    }
                });
            }
        });

        function onBegin() {
            console.log("onBegin")
            document.getElementById("loader").className = "loading";
        }

        function onFailure(data) {
            console.log(data)
            document.getElementById("loader").className = "";

            toastr.options.closeDuration = 2000;
            toastr.options.closeEasing = 'swing';
            toastr.options.progressBar = true;
            toastr.error('Error !' + data.responseText)
        }

    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
